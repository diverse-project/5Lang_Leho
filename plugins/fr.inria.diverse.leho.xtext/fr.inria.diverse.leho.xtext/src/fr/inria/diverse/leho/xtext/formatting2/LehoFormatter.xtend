/*
 * generated by Xtext 2.27.0
 */
package fr.inria.diverse.leho.xtext.formatting2

import com.google.inject.Inject
import fr.inria.diverse.leho.model.Leho.Policy
import fr.inria.diverse.leho.xtext.services.LehoGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import fr.inria.diverse.leho.model.Leho.Rule
import fr.inria.diverse.leho.model.Leho.PacketSpec
import fr.inria.diverse.leho.model.Leho.ExtensionHeader

class LehoFormatter extends AbstractFormatter2 {

	@Inject extension LehoGrammarAccess

	def dispatch void format(Policy policy, extension IFormattableDocument document) {
		policy.filter.firstRule.format
	}

	def dispatch void format(Rule rule, extension IFormattableDocument document) {
		rule.packetspec.format
		rule.next.format
	}

	def dispatch void format(PacketSpec spec, extension IFormattableDocument document) {
		spec.extensionheader.format
		spec.append[newLine]
	}
	
	def dispatch void format(ExtensionHeader header, extension IFormattableDocument document) {
		val where = header.regionFor.keyword("where")
		val and = header.regionFor.keyword("and")
		where.append[newLine]
		and.append[newLine]
	}
}
